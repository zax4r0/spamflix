// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")

}

model Account {
  id                 String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  compoundId         String    @unique @map(name: "compound_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model Session {
  id String @id @default(dbgenerated()) @map("_id") @db.ObjectId

  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model User {
  id String @id @default(dbgenerated()) @map("_id") @db.ObjectId

  name                String?
  email               String?               @unique
  emailVerified       DateTime?             @map(name: "email_verified")
  image               String?
  createdAt           DateTime              @default(now()) @map(name: "created_at")
  updatedAt           DateTime              @default(now()) @map(name: "updated_at")
  account             Account[]
  session             Session[]
  verificationRequest VerificationRequest[]
  role              Role @default(USER)
  @@map(name: "users")
}

model VerificationRequest {
  id         String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model Profile{
  id         String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  fist_name  String?
  last_name  String?

}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}